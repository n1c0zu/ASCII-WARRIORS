//
// Created by nicol on 21/10/2024.
//

#ifndef DATABASE_H // Include guard to prevent multiple inclusions
#define DATABASE_H



// Arrays of characters representing different categories for pulls
char n[] = {48, 49, 50, 51, 52, 53, 54, 55, 56, 57}; // Numbers represented as ASCII values
char r[] = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'}; // Consonants
char sr[] = {'a', 'e', 'i', 'o', 'u', 'y', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'}; // Lowercase vowels and uppercase letters from G
char ssr[] = {'A', 'B', 'C', 'D', 'E', 'F', 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 91, 92, 93, 94, 95, 96, 123, 124, 125, 126}; // Uppercase letters and special characters
char *ur[] = {":)", "xD", ":P", "##", "&&", "69", "::", "!?", "^^", ":D", "8-", "ww", "jk", "fr", "Ab", "00"}; // Ultra-rare combos

char *en[] = {"..."};
// Array of rarity names for pulls
char *rar[] = {"normal", "rare", "super-rare", "super-super-rare", "ultra-rare"};

// Rarity distribution variables
int n_rar = 594; // Normal rarity count
int r_rar = 300; // Rare rarity count
int sr_rar = 80; // Super-rare rarity count
int ssr_rar = 25; // Super-super-rare rarity count
int ur_rar = 1; // Ultra-rare rarity count


// Define a structure for each party member
typedef struct {
    char name[3];   // Array for character name (or single character)
    int rarity;      // Store rarity level
    int position;    // Store the position (j index)
} PartyMember;

// Define the party array with 4 members
PartyMember party[4]={
{{"Nan"},0,0},
{{"Nan"},0,0},
{{"Nan"},0,0},
{{"Nan"},0,0},
};

// Definition and initialization of the character stats arrays for different rarity levels

// TEMPLATE
// rar       hp      atk      res      dex      spd
// N:     25-55   80-135   80-135   80-135     5-15
// R:     65-90  140-210  140-210  140-210    25-35
// SR:  110-145  245-470  245-470  245-470    45-60
// SSR: 155-190  510-790  510-790  510-790    75-95
// UR:  210-270  835-900  835-900  835-900  105-130

struct CharStats en_stats[] = {
    {'.',{25, 80, 80, 5}}
};

struct CharStats n_Stats[] = {
    {'0', {35, 125, 130, 95, 10}},
    {'1', {25, 95, 90, 110, 15}},
    {'2', {55, 80, 125, 95, 5}},
    {'3', {30, 90, 120, 115, 5}},
    {'4', {50, 90, 80, 115, 15}},
    {'5', {45, 120, 130, 80, 10}},
    {'6', {40, 120, 130, 115, 15}},
    {'7', {40, 95, 105, 135, 5}},
    {'8', {30, 110, 115, 85, 10}},
    {'9', {50, 110, 90, 105, 10}}
};

struct CharStats r_Stats[] = {
    {'b', {75, 200, 195, 185, 35}},
    {'c', {65, 175, 205, 185, 30}},
    {'d', {90, 185, 160, 145, 25}},
    {'f', {85, 165, 180, 150, 25}},
    {'g', {80, 155, 175, 165, 35}},
    {'h', {70, 205, 210, 165, 30}},
    {'j', {70, 150, 145, 210, 30}},
    {'k', {85, 210, 140, 180, 25}},
    {'l', {75, 165, 205, 195, 30}},
    {'m', {65, 170, 160, 195, 35}},
    {'n', {90, 205, 160, 190, 35}},
    {'p', {80, 200, 160, 190, 30}},
    {'q', {85, 160, 200, 180, 25}},
    {'r', {90, 185, 160, 205, 30}},
    {'s', {70, 195, 175, 210, 30}},
    {'t', {65, 145, 140, 175, 30}},
    {'v', {75, 185, 165, 145, 35}},
    {'w', {80, 145, 190, 205, 30}},
    {'x', {70, 150, 140, 155, 35}},
    {'z', {65, 200, 205, 145, 30}}
};

struct CharStats sr_Stats[] = {
    {'a', {130, 455, 330, 405, 55}},
    {'e', {145, 415, 245, 315, 55}},
    {'i', {120, 275, 265, 280, 45}},
    {'o', {115, 250, 275, 425, 50}},
    {'u', {125, 355, 450, 335, 50}},
    {'y', {110, 380, 440, 285, 55}},
    {'G', {145, 310, 385, 415, 55}},
    {'H', {130, 390, 450, 345, 55}},
    {'I', {135, 245, 450, 305, 60}},
    {'J', {120, 360, 400, 260, 60}},
    {'K', {120, 420, 370, 265, 45}},
    {'L', {110, 415, 400, 390, 60}},
    {'M', {135, 270, 405, 460, 60}},
    {'N', {125, 320, 445, 405, 55}},
    {'O', {140, 420, 265, 300, 60}},
    {'P', {145, 350, 305, 470, 55}},
    {'Q', {130, 275, 295, 385, 60}},
    {'R', {140, 280, 430, 470, 55}},
    {'S', {110, 250, 270, 325, 55}},
    {'T', {135, 435, 440, 355, 60}},
    {'U', {115, 455, 245, 260, 55}},
    {'V', {140, 410, 245, 300, 50}},
    {'W', {115, 360, 445, 450, 55}},
    {'X', {130, 385, 400, 400, 60}},
    {'Y', {115, 300, 295, 450, 45}},
    {'Z', {140, 440, 290, 385, 50}}
};

struct CharStats ssr_Stats[] = {
    {'A', {190, 655, 600, 600, 95}},
    {'B', {155, 570, 665, 665, 80}},
    {'C', {155, 740, 625, 625, 75}},
    {'D', {180, 520, 650, 650, 75}},
    {'E', {190, 715, 670, 670, 95}},
    {'F', {170, 520, 515, 515, 90}},
    {'!', {170, 650, 605, 605, 80}},
    {'"', {185, 610, 620, 620, 90}},
    {'#', {175, 710, 755, 755, 95}},
    {'$', {180, 650, 745, 745, 95}},
    {'%', {185, 650, 615, 615, 80}},
    {'&', {155, 565, 675, 675, 85}},
   {'\'', {180, 650, 575, 575, 80}},  // Note: escaping the single quote character
    {'(', {175, 660, 720, 720, 95}},
    {')', {170, 670, 550, 550, 75}},
    {'*', {190, 755, 575, 575, 90}},
    {'+', {185, 665, 715, 715, 75}},
    {',', {165, 735, 545, 545, 90}},
    {'-', {160, 620, 780, 780, 90}},
    {'.', {155, 700, 765, 765, 85}},
    {'/', {175, 610, 555, 555, 85}},
    {':', {180, 770, 705, 705, 85}},
    {';', {170, 555, 530, 530, 80}},
    {'<', {185, 705, 530, 530, 85}},
    {'=', {190, 745, 560, 560, 80}},
    {'>', {165, 560, 775, 775, 95}},
    {'?', {185, 555, 585, 585, 95}},
    {'@', {175, 695, 735, 735, 95}},
    {'[', {180, 600, 775, 775, 90}},
   {'\\', {180, 525, 585, 585, 80}},
    {']', {180, 620, 610, 610, 95}},
    {'^', {165, 780, 760, 760, 85}},
    {'_', {175, 545, 620, 620, 95}},
    {'`', {170, 685, 750, 750, 95}},
    {'{', {165, 530, 785, 785, 95}},
    {'|', {165, 560, 615, 615, 85}},
    {'}', {175, 705, 790, 790, 90}},
    {'~', {160, 530, 670, 670, 90}},
};

struct CharStats ur_Stats[] = {
    {':', {215, 900, 855, 975, 130}},   // Stats for ":)"
    {'x', {255, 985, 920, 910, 125}},   // Stats for "xD"
    {'P', {220, 880, 880, 875, 105}},   // Stats for ":P"
    {'#', {270, 925, 895, 925, 130}},   // Stats for "##"
    {'&', {235, 920, 970, 840, 130}},   // Stats for "&&"
    {'6', {220, 860, 895, 970, 110}},  // Stats for "69"
    {':', {260, 860, 895, 970, 115}},   // Stats for "::"
    {'!', {270, 930, 900, 955, 120}},   // Stats for "!? "
    {'^', {260, 965, 850, 880, 115}},   // Stats for "^^"
    {'D', {260, 890, 840, 905, 120}},   // Stats for ":D"
    {'8', {220, 935, 990, 990, 130}},  // Stats for "8-"
    {'w', {230, 940, 955, 870, 125}},   // Stats for "ww"
    {'j', {220, 970, 835, 965, 115}},   // Stats for "jk"
    {'f', {210, 930, 950, 885, 125}},   // Stats for "fr"
    {'A', {255, 930, 950, 905, 125}},  // Stats for "Ab"
    {'0', {235, 920, 920, 845, 130}}    // Stats for "00"
};

#endif //DATABASE_H // End of include guard
